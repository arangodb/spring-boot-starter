version: 2.1

parameters:
  docker-img:
    type: 'string'
    default: ""

commands:
  setup_docker:
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
  timeout:
    parameters:
      duration:
        default: '5m'
        type: 'string'
    steps:
      - run:
          name: Cancel job after <<parameters.duration>>
          background: true
          command: |
            sleep <<parameters.duration>>
            echo "Cancelling job as <<parameters.duration>> has elapsed"
            curl --fail -X POST -H "Circle-Token: ${CIRCLE_TOKEN}" "https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BUILD_NUM}/cancel"
  start-db:
    parameters:
      docker-img:
        type: 'string'
        default: <<pipeline.parameters.docker-img>>
    steps:
      - run:
          name: Start Database
          command: ./docker/start_db.sh
          environment:
            DOCKER_IMAGE: <<parameters.docker-img>>
  mvn-info:
    steps:
      - run:
          name: mvn version
          command: mvn --version
      - run:
          name: mvn dependency:tree
          command: mvn dependency:tree
  mvn-install:
    steps:
      - run:
          name: mvn install
          command: mvn install -Dmaven.test.skip=true -Dgpg.skip=true -Dmaven.javadoc.skip=true
  test:
    steps:
      - run:
          name: Test
          command: mvn test
  report:
    steps:
      - run:
          name: Create reports
          command: mvn -e surefire-report:report-only
      - store_artifacts:
          path: target/site
  load_cache:
    steps:
      - run:
          name: Generate Cache Checksum
          command: find . -name 'pom.xml' | sort | xargs cat > /tmp/maven_cache_seed
      - restore_cache:
          key: maven-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/maven_cache_seed" }}
  store_cache:
    steps:
      - save_cache:
          key: maven-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/maven_cache_seed" }}
          paths:
            - ~/.m2/repository
  config_gpg:
    steps:
      - run:
          name: Configure GPG
          command: echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --no-tty --import --yes
  deploy:
    steps:
      - run:
          name: Deploy to Apache Maven Central
          command: mvn -s .circleci/maven-release-settings.xml -Dmaven.test.skip=true deploy
  release:
    steps:
      - run:
          name: Release to Apache Maven Central
          command: mvn -s .circleci/maven-release-settings.xml -Dmaven.test.skip=true nexus-staging:release
          environment:
            MAVEN_OPTS: "--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED"

executors:
  j17:
    docker:
      - image: 'cimg/openjdk:17.0'
  j21:
    docker:
      - image: 'cimg/openjdk:21.0'

jobs:
  test:
    parameters:
      docker-img:
        type: 'string'
        default: <<pipeline.parameters.docker-img>>
      jdk:
        type: 'string'
        default: 'j21'
    executor: <<parameters.jdk>>
    steps:
      - timeout
      - checkout
      - setup_docker
      - start-db:
          docker-img: <<parameters.docker-img>>
      - load_cache
      - mvn-info
      - test
      - report
      - store_cache
  demo:
    parameters:
      docker-img:
        type: 'string'
        default: <<pipeline.parameters.docker-img>>
    executor: 'j21'
    steps:
      - timeout
      - checkout
      - setup_docker
      - start-db:
          docker-img: <<parameters.docker-img>>
      - load_cache
      - mvn-info
      - mvn-install
      - run:
          name: Run demo
          command: mvn spring-boot:run
          working_directory: demo
      - store_cache
  deploy:
    executor: 'j17'
    steps:
      - timeout
      - checkout
      - load_cache
      - mvn-info
      - config_gpg
      - deploy
      - store_cache
  release:
    executor: 'j17'
    steps:
      - timeout
      - checkout
      - load_cache
      - mvn-info
      - config_gpg
      - deploy
      - release
      - store_cache

workflows:
  test:
    jobs:
      - test:
          name: test-<<matrix.jdk>>
          matrix:
            parameters:
              jdk:
                - 'j17'
                - 'j21'
  demo:
    jobs:
      - demo:
          name: demo-<<matrix.docker-img>>
          matrix:
            parameters:
              docker-img:
                - 'docker.io/arangodb/arangodb:3.11'
                - 'docker.io/arangodb/arangodb:3.12'
  deploy:
    jobs:
      - deploy:
          context: java-release
          filters:
            tags:
              only: /^deploy.*/
            branches:
              ignore: /.*/
  release:
    jobs:
      - release:
          context: java-release
          filters:
            tags:
              only: /^release.*/
            branches:
              ignore: /.*/
